version: "3.8"

services: 
  api:
      depends_on:
      - db
      build:
        context: ./
        dockerfile: Dockerfile
        target: production
      container_name: api
      restart: always
      volumes:
       - .:/usr/src/app
      ports:
        - '4000:4000'
      networks:
       - docker-network

  db:
      image: postgres
      restart: always
      container_name: db
      environment:
        POSTGRES_PASSWORD: postgresPass
        POSTGRES_USER: postgresUser
        POSTGRES_DB: PresentationDB
      volumes:
         - ./PresentationDBData:/var/lib/postgresql
      ports:
       - "5432:5432"
      healthcheck:
        test: ["CMD-SHELL", "pg_isready"]
        interval: 10s
        timeout: 5s
        retries: 5
      expose:
      - 5432
      networks:
       - docker-network

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    ports:
      - "9100:9100"
    restart: unless-stopped
    networks:
      - prometheus-network
    volumes:
      - '/:/host:ro,rslave' 
    
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./config:/etc/prometheus/
      - prometheus-data:/prometheus
    networks:
      - prometheus-network
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - prometheus-network
    ports:
      - "3000:3000"

volumes:
      PresentationDBData:
      prometheus-data:
        driver: local
      grafana-data:
        driver: local
networks:
  docker-network:
    driver: bridge
  prometheus-network:
    driver: bridge